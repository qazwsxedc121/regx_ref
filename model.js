// Generated by CoffeeScript 1.7.1
(function() {
  var all_ids, fs, regitem_index_path, regitem_path;

  fs = require("fs");

  regitem_path = "data/regex_detail";

  regitem_index_path = "data/regitems.json";

  all_ids = function() {
    var f, flist, ids;
    flist = fs.readdirSync(regitem_path);
    return ids = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = flist.length; _i < _len; _i++) {
        f = flist[_i];
        _results.push(f.slice(0, -5));
      }
      return _results;
    })();
  };

  exports.all_ids_data = function() {
    return JSON.parse(fs.readFileSync(regitem_index_path));
  };

  exports.all_ids = all_ids;

  exports.find_regitem_by_id = function(id) {
    var f;
    return f = fs.readFileSync(regitem_path + "/" + id + ".json", {
      "encoding": "utf-8"
    });
  };

  exports.indexing_regitems = function() {
    var c, id, id_f, ids, memory_regitems_cache, result, _i, _len;
    ids = all_ids();
    result = [];
    for (_i = 0, _len = ids.length; _i < _len; _i++) {
      id = ids[_i];
      id_f = fs.readFileSync(regitem_path + "/" + id + ".json");
      c = JSON.parse(id_f);
      result.push({
        "id": id,
        "name": c.name,
        "useage": c.describe
      });
    }
    memory_regitems_cache = result;
    fs.writeFileSync(regitem_index_path, JSON.stringify(result));
    return console.log("write finished");
  };

}).call(this);

//# sourceMappingURL=model.map
